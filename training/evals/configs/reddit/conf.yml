# Configuration file of FAR training experiment

# ========== Cluster configuration ========== 
# ip address of the parameter server (need 1 GPU process)
ps_ip: dev-amd20-v100

# ip address of each worker:# of available gpus process on each gpu in this node
# Note that if we collocate ps and worker on same GPU, then we need to decrease this number of available processes on that GPU by 1
# E.g., master node has 4 available processes, then 1 for the ps, and worker should be set to: worker:3
worker_ips: 
    - dev-amd20-v100:[1] # worker_ip: # of gpus

exp_path: /mnt/home/lichenni/projects/Oort/training
python_path: /mnt/home/lichenni/anaconda3/envs/oort/bin/

auth:
    ssh_user: ""
    ssh_private_key: ~/.ssh/id_rsa

# cmd to run before we can indeed run FAR (in order)
setup_commands:
    # - source $HOME/anaconda3/bin/activate fedscale    
    # - export NCCL_SOCKET_IFNAME='enp94s0f0'         # Run "ifconfig" to ensure the right NIC for nccl if you have multiple NICs

# ========== Additional job configuration ========== 
# Default parameters are specified in argParser.py, wherein more description of the parameter can be found

job_conf: 
    - log_path: /mnt/home/lichenni/projects/Oort/training/evals # Path of log files
    - job_name: reddit                   # Generate logs under this folder: log_path/job_name/time_stamp
    - task: nlp
    - total_worker: 100                      # Number of participants per round, we use K=100 in our paper, large K will be much slower
    - data_set: blog                     # Dataset: openImg, google_speech, reddit
    - data_dir: /mnt/ufs18/nodr/home/lichenni/projects/FedScale/dataset/reddit    # Path of the dataset
    - data_mapfile: /mnt/ufs18/nodr/home/lichenni/projects/FedScale/dataset/reddit/client_data_mapping/train.csv              # Allocation of data to each client, turn to iid setting if not provided
    - client_path: /mnt/ufs18/nodr/home/lichenni/projects/FedScale/dataset/data/device_info/client_profile.pkl     # Path of the client trace
    - sample_mode: random
    - model: albert-base-v2                            # Models: e.g., shufflenet_v2_x2_0, mobilenet_v2, resnet34, albert-base-v2
    - eval_interval: 5                     # How many rounds to run a testing on the testing set
    - epochs: 0                          # Number of rounds to run this training. We use 1000 in our paper, while it may converge w/ ~400 rounds
    - filter_less: 21                       # Remove clients w/ less than 21 samples
    - num_loaders: 4                        # Dataloaders 
    - learning_rate: 4e-5
    - min_learning_rate: 1e-5
    - batch_size: 20
    - test_bsz: 20
       # customized
    - upload_epoch: 30
    - enable_obs_client: True
    # - enforce_random: True


